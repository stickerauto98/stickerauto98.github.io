{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/first-page/first-page.component.ts","webpack:///./src/app/second-page/second-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZwC;AACe;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACTa;AAC6B;AAOvE;IANA;QAOE,gBAAW,GAAG,mFAAkB,CAAC;IACnC,CAAC;IAFY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,kEAET;SACF,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACM;AACtB;AAGc;AACT;AAC2B;AACH;AAwBvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sFAAmB;gBACnB,mFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,uDAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,OAAO,EAAE,CAAE,oEAAsB,CAAE;YACnC,eAAe,EAAE;gBACf,mFAAkB;gBAClB,sFAAmB;aAEpB;SAEF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AChCoB;AACiC;AAEhC;AAoB3C;IACE,mEAAmE;IACnE,4BAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAC3C,CAAC;IAED,iCAAI,GAAJ;QACE,6CAA6C;QAC7C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,sFAAmB,CAAC,CAAC;IACvD,CAAC;IARU,kBAAkB;QAlB9B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,gTAcT;SACF,CAAC;+EAG+B,wDAAY;OAFhC,kBAAkB,CAS9B;IAAD,yBAAC;CAAA;AAT8B;;;;;;;;;;;;;;;;;;;ACvBW;AACC;AA8B3C;IACE,6BAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAC3C,CAAC;IAED,iCAAG,GAAH;QACE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IANU,mBAAmB;QA1B/B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,ivBAsBT;SACF,CAAC;+EAE+B,wDAAY;OADhC,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;AC/BhC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule} from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FirstPageComponent } from './first-page/first-page.component';\n@Component({\n  selector: 'app-root',\n  template: `\n    <ons-navigator [page]=\"initialPage\"></ons-navigator>\n  `\n})\nexport class AppComponent {\n  initialPage = FirstPageComponent;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { OnsenModule } from 'ngx-onsenui';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SecondPageComponent } from './second-page/second-page.component';\nimport { FirstPageComponent } from './first-page/first-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SecondPageComponent,\n    FirstPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    OnsenModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  entryComponents: [\n    FirstPageComponent,\n    SecondPageComponent,\n\n  ],\n\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { SecondPageComponent } from '../second-page/second-page.component';\n\nimport { OnsNavigator } from 'ngx-onsenui';\n\n@Component({\n  selector: 'ons-page[first]',\n  template: `\n  <ons-page class=\"page\">\n    <ons-toolbar>\n      <div class=\"center\">first</div>\n    </ons-toolbar>\n    <div class=\"content\">\n      <div style=\"text-align: center;\">\n        <br>\n        <ons-button (click)=\"push()\">Push</ons-button>\n\n      </div>\n    </div>\n  </ons-page>\n\n  `\n})\nexport class FirstPageComponent {\n  // Get a way to access `ons-navigator` by Dependency Injection (DI)\n  constructor(private navigator: OnsNavigator) {\n  }\n\n  push() {\n    // Push SecontPageComponent to `ons-navigator\n    this.navigator.element.pushPage(SecondPageComponent);\n  }\n}\n","import { Component } from '@angular/core';\nimport { OnsNavigator } from 'ngx-onsenui';\n\n\n\n@Component({\n  selector: 'ons-page[second]',\n  template: `\n  <ons-page class=\"page\">\n    <ons-toolbar>\n    <div class=\"left\"><ons-back-button>Back</ons-back-button></div>\n\n      <div class=\"center\">second</div>\n    </ons-toolbar>\n    <div class=\"content\">\n      <div style=\"text-align: center;\">\n        <br>\n        <ons-button (click)=\"modal.show()\">show</ons-button><br><br>\n        <ons-button (click)=\"pop()\">pop</ons-button>\n\n      </div>\n    </div>\n  </ons-page>\n\n  <!-- must be located just under outermost box such as body element -->\n  <ons-modal #modal (click)=\"modal.hide()\">\n    <p>This is just an example.</p>\n    <p><span (click)=\"modal.hide()\" style=\"text-decoration: underline; cursor: pointer;\">Click</span> to hide this modal.</p>\n  </ons-modal>\n  `\n})\nexport class SecondPageComponent {\n  constructor(private navigator: OnsNavigator) {\n  }\n\n  pop() {\n    this.navigator.element.popPage();\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}